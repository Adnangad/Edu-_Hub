{"ast":null,"code":"var _jsxFileName = \"/home/shamim/Desktop/Edu-_Hub/frontend/src/pages/File.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const getFile = event => {\n    setFile(event.target.files[0]);\n  };\n  const upload = async event => {\n    event.preventDefault();\n    if (!file) {\n      console.error('No file selected');\n      return;\n    }\n    console.log(date);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('course', 'Chemistry');\n    formData.append('due', date);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/edu/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('File uploaded successfully:', data);\n      } else {\n        console.error(data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: upload,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: getFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value),\n      placeholder: \"year-month-day\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"lePgLnPHQq1uwtnR5CKNI4ZW2tY=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","date","setDate","getFile","event","target","files","upload","preventDefault","console","error","log","formData","FormData","append","response","fetch","method","body","data","json","ok","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","e","placeholder","_c","$RefreshReg$"],"sources":["/home/shamim/Desktop/Edu-_Hub/frontend/src/pages/File.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction FileUpload() {\n  const [file, setFile] = useState(null);\n  const [date, setDate] = useState(\"\");\n\n  const getFile = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const upload = async (event) => {\n    event.preventDefault();\n\n    if (!file) {\n      console.error('No file selected');\n      return;\n    }\n\n    console.log(date);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('course', 'Chemistry');\n    formData.append('due', date);\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/edu/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('File uploaded successfully:', data);\n      } else {\n        console.error(data.error);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <form onSubmit={upload}>\n      <input type=\"file\" onChange={getFile} />\n      <input\n        type=\"date\"\n        value={date} \n        onChange={(e) => setDate(e.target.value)} \n        placeholder=\"year-month-day\"\n      />\n      <button type=\"submit\">Upload File</button>\n    </form>\n  );\n}\n\nexport default FileUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,OAAO,GAAIC,KAAK,IAAK;IACzBJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,MAAM,GAAG,MAAOH,KAAK,IAAK;IAC9BA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACT,IAAI,EAAE;MACTU,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;MACjC;IACF;IAEAD,OAAO,CAACE,GAAG,CAACV,IAAI,CAAC;IACjB,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEf,IAAI,CAAC;IAC7Ba,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC;IACtCF,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEb,IAAI,CAAC;IAE5B,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MACF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAIL,QAAQ,CAACM,EAAE,EAAE;QACfZ,OAAO,CAACE,GAAG,CAAC,6BAA6B,EAAEQ,IAAI,CAAC;MAClD,CAAC,MAAM;QACLV,OAAO,CAACC,KAAK,CAACS,IAAI,CAACT,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEd,OAAA;IAAM0B,QAAQ,EAAEf,MAAO;IAAAgB,QAAA,gBACrB3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEtB;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCjC,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXM,KAAK,EAAE7B,IAAK;MACZwB,QAAQ,EAAGM,CAAC,IAAK7B,OAAO,CAAC6B,CAAC,CAAC1B,MAAM,CAACyB,KAAK,CAAE;MACzCE,WAAW,EAAC;IAAgB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFjC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX;AAAC/B,EAAA,CAlDQD,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AAoDnB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}