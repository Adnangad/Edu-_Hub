{"ast":null,"code":"var _jsxFileName = \"/home/shamim/Desktop/Edu-_Hub/frontend/src/pages/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../static/Chat.css\";\nimport Pusher from \"pusher-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const url = \"http://127.0.0.1:8000/edu/chatRoom\";\n  useEffect(() => {\n    Pusher.logToConsole = true;\n    const pusher = new Pusher(\"c4d1ea6264a50a99b57d\", {\n      cluster: \"ap1\"\n    });\n    const channel = pusher.subscribe(\"chatroom\");\n    channel.bind(\"message\", function (data) {\n      setMessages(prevMessages => [...prevMessages, data]); // Update state immutably\n    });\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [token, navigate]); // Add dependencies to prevent continuous execution\n\n  const submit = async e => {\n    e.preventDefault();\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Token\": token\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    setMessage(\"\"); // Clear input field after sending message\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageView\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [message.user_name, \": \", message.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendMessage\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => submit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"write a message\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"y7XI/LE5vDR9LKVlTWjgnJQXGWg=\", false, function () {\n  return [useNavigate];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Pusher","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","message","setMessage","navigate","url","logToConsole","pusher","cluster","channel","subscribe","bind","data","prevMessages","unbind_all","unsubscribe","token","submit","e","preventDefault","fetch","method","headers","body","JSON","stringify","className","children","map","index","user_name","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/shamim/Desktop/Edu-_Hub/frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../static/Chat.css\";\nimport Pusher from \"pusher-js\";\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const url = \"http://127.0.0.1:8000/edu/chatRoom\";\n\n  useEffect(() => {\n\n    Pusher.logToConsole = true;\n\n    const pusher = new Pusher(\"c4d1ea6264a50a99b57d\", {\n      cluster: \"ap1\",\n    });\n\n    const channel = pusher.subscribe(\"chatroom\");\n    channel.bind(\"message\", function (data) {\n      setMessages((prevMessages) => [...prevMessages, data]); // Update state immutably\n    });\n\n    return () => {\n      channel.unbind_all();\n      channel.unsubscribe();\n    };\n  }, [token, navigate]); // Add dependencies to prevent continuous execution\n\n  const submit = async (e) => {\n    e.preventDefault();\n    await fetch(url, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", \"X-Token\": token },\n      body: JSON.stringify({\n        message,\n      }),\n    });\n    setMessage(\"\"); // Clear input field after sending message\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"messageView\">\n        {messages.map((message, index) => (\n          <p key={index}>\n            {message.user_name}: {message.message}\n          </p>\n        ))}\n      </div>\n      <div className=\"sendMessage\">\n        <form onSubmit={(e) => submit(e)}>\n          <input\n            type=\"text\"\n            placeholder=\"write a message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button type=\"submit\">Send message</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,oBAAoB;AAC3B,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,GAAG,GAAG,oCAAoC;EAEhDb,SAAS,CAAC,MAAM;IAEdG,MAAM,CAACW,YAAY,GAAG,IAAI;IAE1B,MAAMC,MAAM,GAAG,IAAIZ,MAAM,CAAC,sBAAsB,EAAE;MAChDa,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAGF,MAAM,CAACG,SAAS,CAAC,UAAU,CAAC;IAC5CD,OAAO,CAACE,IAAI,CAAC,SAAS,EAAE,UAAUC,IAAI,EAAE;MACtCX,WAAW,CAAEY,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,OAAO,MAAM;MACXH,OAAO,CAACK,UAAU,CAAC,CAAC;MACpBL,OAAO,CAACM,WAAW,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACC,KAAK,EAAEZ,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEvB,MAAMa,MAAM,GAAG,MAAOC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,KAAK,CAACf,GAAG,EAAE;MACfgB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE,kBAAkB;QAAE,SAAS,EAAEN;MAAM,CAAC;MACjEO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBvB;MACF,CAAC;IACH,CAAC,CAAC;IACFC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACEN,OAAA;IAAK6B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB9B,OAAA;MAAK6B,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzB3B,QAAQ,CAAC4B,GAAG,CAAC,CAAC1B,OAAO,EAAE2B,KAAK,kBAC3BhC,OAAA;QAAA8B,QAAA,GACGzB,OAAO,CAAC4B,SAAS,EAAC,IAAE,EAAC5B,OAAO,CAACA,OAAO;MAAA,GAD/B2B,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MAAK6B,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B9B,OAAA;QAAMsC,QAAQ,EAAGjB,CAAC,IAAKD,MAAM,CAACC,CAAC,CAAE;QAAAS,QAAA,gBAC/B9B,OAAA;UACEuC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,iBAAiB;UAC7BC,KAAK,EAAEpC,OAAQ;UACfqC,QAAQ,EAAGrB,CAAC,IAAKf,UAAU,CAACe,CAAC,CAACsB,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACFrC,OAAA;UAAQuC,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CA3DQD,IAAI;EAAA,QAGMJ,WAAW;AAAA;AAAA+C,EAAA,GAHrB3C,IAAI;AA6Db,eAAeA,IAAI;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}